JLabel 即可有文本又可有图标。
MouseMotionListener鼠标事件是鼠标移动
JFrame 和 JButton组件定义在 javax.swing
布局管理器负责组件显示方式
使按钮对象不响应事件，使用的方法是removeActionListener(ActionListener i)
settitle()设置标题

gra phi cal(ˈɡræfɪkl图形化的) AWT在java的java.awt包中  。Swing在javax.swing中
Swing不包含本地代码称为“轻量级”组件。AWT包含本地代码称为"重量级"组件  如果区域重叠AWT显示在上
组件有：JButton(按钮)，JTextField(单行文本输入框)，标签(JLabel)    容器有（特殊组件）：框架（Frame），面板（Pane）
JTextArea(行，列)是多行的输入框
【com po nent|kəmˈpəʊnənt组件，元件,构成的;per for med执行】
顶层容器：
	JFrame(带标题和控制按钮的独立窗口)
		JFrame(string title)初始不可见，有标题。 setVisble(true)设置可见
		void setBounds(int x,int y,int width,int height)左上角横纵x,y
		void pack()调整框架大小，适合子组件的首选大小和布局 Container getContentPane()返回框架窗体内容窗格对象	【pack包】
		setLayout(LayoutManager manager)设置布局管理器  setBackground(Color)设置背景
```
JFrame frame = new JFrame("带标题")//最外层的顶层容器（组件必须在容器中，容器可以嵌套）
frame.getContentPane().add(button,BorderLayout.CENTER)//添加组件的时候设置边界布局#必须获得内容窗格getContentPane#  2参不写默认是中
frame.pack()//调整适当大小
frame.setVisble(显示可见)
frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE)
```
获得内容窗格的方式有1. Container c = frame.getContentPane();然后在内容窗格内添加组件（这是默认的内容窗格而且默认BorderLayout）
JPanel contentPane = new JPanel();//创建实例
contentPane.setLayout(new BorderLayout());//所以要设置 BorderLayout.CENTER可以用"South"
contentPane.add(button，BorderLayout.CENTER）添加组件            内容窗格添加东西的时候，可以设置位置
frame.setContentPane(contentPane)//向顶层容器添加内容窗格
	frame框架窗口
	JApplet(小应用程序，在浏览器窗口中)
	JDialog(对话框)
	JWindow（不带标题和控制按钮的窗口）

jscrollpane滚动窗口： JScrollpane(Component view)创建显示指定组件内容的JScrollPane 需要方法设置水平还是垂直【Component|kəmˈpəʊnənt成分；组件】
new JPanel(LayoutManager layout).add(Component comp)指定布局管理器的新面板，并添加指定组件。
Scrollbar()构造垂直滚动条，或者添加int orientation值是Scrollbar.HORIZONTAL 或者 Scrollbar.VERTICAL。
因为JScrollPane是Container的子类,但是只能添加一个组件。所以多个组件的时候一般先添加到JPanel再添加到JScrollPane
	new JScrollpane(list,JScrollpane.VERTICAL.SCROLLBAR_AS_NEEDED,JScrollpane.HORIZONTAL.SCROLLBAR_AS_NEEDED,)

标签JLable显示文本信息和图片信息（可同时）：JLabel(String text,Icon icon,int horizontalAlignment)文本和图片水平对齐同时显示
		图标的标签JLabel(Icon image,int horizontalAlignment)horizontalAlignment可以换成JLabel.RIGHT,JLabel.CENTER,JLabel.LEFT左对齐，image可以换成文本
		（默认情况下，只有文本水平左对齐，只有图标水平居中，标签内容垂直居中）
		设置对齐方式：label.setHorizontalAlignment(JLabel.CENTER)水平居中,label.setVerticalAlignment(JLabel.BOTTOM)底部对齐
		【Alignment|əˈlaɪnmənt队列，成直线对齐，Vertical|ˈvɜːrtɪkl垂直的】

按钮：AbstractButton的子类或间接子类有4种形式：JButton(Icon icon)有图标的按钮可以替换为文字,
JToggleButton（切换）(父类),JCheckBox（复选）（子类）,JRadioButton（单选）（子类）
		JButton b=new JButton("文字"，new ImageIcon("图片"));
		JButton(String text)：创建一个有标签文本、无图标的按钮
JButton类的方法：void setMnemonic(int mnemonic)设置当前按钮的键盘助记符
		setText(设置按钮的文本)。getText()返回按钮的文本。
		setToolTipText（string text）设置要显示的提示文本
		addActionListener(ActionEvent e))添加侦听事件
		setEnabled()方法改变按钮状态
		new JToggleButton（string text.icon icon,boolean selected）显示文本加图标和舒适化状态的切换按钮，默认未选中 true处于选中
ButtonGroup group =new ButtonGroup();group.add(button1);group.add(button2)创建按钮组，并在组中添加按钮  多个按钮只能一个被选中
JToggleButton,JCheckBox和JRadioButton具有两种状态的按钮不仅可以注册actionEvent 还可以注册ItemEvent事件监听

对于Button bt=new Button("buttons");
Object getSource()方法是指获取从哪个组件发出的事件源，得到的是bt	对于除了Button外，其他可以注册ItemEvent的可以用getItem
调用getActionCommand()返回的是事件源按钮的文字信息,依赖于按钮上的字符串得到的是:buttons 
可以用isSelected()方法获取按钮的当前状态

JCheckBox加入按钮组后只能单选，但是JRadioButton可以多选，比如分别在两个组注册不同的事件监听程序JCheckBox会true，false,true.而JRadioButton可以多选
容器的每个区域只能加入一个组件，加入多个组件只有最后一个是有效的，可以放入一个JPanel组件(JPanel是轻量级容器。解释:按钮、文本框等都)
如果4个边界区域中，某个区域没有使用，那么它的大小变为零，center区域会扩展并占据这个未用区域，都没有就占据整个

布局管理器jframe是BorderLayout，jpanel是默认flowlayout

系统将事件分类称为事件类型 注册监听事件addActionListener(ActionListener i),移除removeActionListener(ActionListener i)
事件在java.awt.event和javax.swing.event包，比如事件有ActionEvent(接口ActionListener按钮，选择菜单项，或者文本框按enter键时)		【Event|ɪˈvent事件，大事】
	.ItemEvent(ItemEvent选框选择，或者选中带复选框菜单时),
	MouseEvent分为：MouseButtonEvent(接口MouseListener分别对应mousePressed鼠标按下，mouseReleased鼠标释放)
					MouseMotionEvent(接口是MouseMotionListner鼠标移动。mouseMoved鼠标移动，mouseDragged鼠标拖放			【Dra gged|制动；拖动】
	,KeyEvent(KeyListener keyPressed键按下，keyTyped击键时 )
因为接口有时候要实现全部方法，所以有适配器，适配器实现了接口和接口中所有的方法，只是内容为空，listener换成adapte比如KeyAdapter和ComponentAdapter		【A da pter|adapter适配器】

Color的每个对象表示一种颜色，第一种是用预定义的颜色（可以使用全大写或者全小写）青色Color.cyan,灰色Color.gray（192，192，192）,浅灰色Color.lightGray(192,192,192)深灰色是（64，64，64）
		第二种 new Color(r,g,b)
		设置前景色setForeground(Color c)		【cyan|saɪən青色，gray|ɡreɪ灰色,Fore|fɔː(r)在...之前】

显示文字的方法有三种：void drawChars(char[] data,int offset,int length,int x,int y)使用此图形上下文字体和颜色显示字符组data中从offset
					void drawString(string astinrg,int x,int y)在指定位置显示字符串aString，
					void drawBytes(byte[] data,int offset,int length,int x,int y)使用此图形上下文字体和颜色显示字符组data中从offset
	字体基本样式Font.PLAIN(正常)，Font.BLOD,Font.ITALIC（斜体）		【plain|pleɪ n平的，简单的,plan|plæn计划设计，italic|ɪˈtælɪk斜体，Italy意大利】
		setFont(new Font("Dialog",int style,int size)),其中getName获取名字，getSize()获取尺寸， int getStyle(获取font)。isBlod是否为加粗
	字体有三要素，字体，字号，样式三个,(颜色不是,宋体属于字体也不是文字基本样式）

对Graphics类设置绘图模式，其中setPaintMode()这是默认的正常模式，setXORMode(Color c),设置为异或模式，c指定了绘图对象与窗口进行异或操作的颜色。
所有绘制都必须通过图形对象，比如在frame中绘图用paint()方法		【paint|peɪ nt绘画功能】
	对于Jcomponent子类的组件绘图比如文本区，jpanel就应该使用paintComponent(Graphics g)方法,可以用getGraphics()得到graphics对象		【Gra phi cs|ɡræfɪks图形图表】
	对于重绘用rePaint()方法,他会自动调用paint()方法
		paintComponent(Graphics g)绘制组件，paintBorder(Graphices)绘制组件的边框,paintChildreen()绘制子组件.
Graphics2D继承于Graphics中的属性以及效果：
		stroke控制线的宽度，笔形BasicStroke(float w,int cap,int join)线宽，端点样式cap，连接样式join		【stroke|strəʊk中风画】
		paint属性控制填充，先GradientPaint()确定填充效果,再使用setPaint设置		【Gradient|ɡreɪdiənt梯度，变化率】
		transform属性，setTransform()方法设置transform属性
		clip属性实现裁剪效果，setClip()确定裁剪区
		composit属性设置图形重叠效果
		使用Graphics2D画一个图形的步骤是：先用paintComponent()或paint()

组合框与列表：JComboBox是一个下拉菜单（可编辑的和不可编辑的）new JComboBox(Object[] items)里面的数组就是选项
		new JComboBox(Object[] items)创建组合框
		setEditable(true)可编辑的
		addItem添加新的可选项
		removeAllItems()删除所有可选项
JList(Object[] listData)构造一个列表，可选项由对象数组指定,在对列表进行选择时会引发ListSelectionEvent事件，在其接口中只包含一个方法：valueChanged（）
	返回所选的第一个值：getSelectedValue()返回所选的第一个值：getSelectedValue
		DefaultListModel lm = new DefaultListModel();
		lm.addElement("我")添加可选项
			列表既支持单选又支持多选setSelectionMode(int selectionMode)int selectionMode可以是
				ListSelectionModel.SINGLE_SELECTION单选						 【single|sɪŋɡl】
				ListSelectionModel.SINGLE_INTERVAL_SELECTION连续多选		 【inter val|ɪntəvl间隔；间距】
				ListSelectionModel.MULTIPLE_INTERVAL_SELECTION间断多选		 【mul ti ple|ˈmʌltɪpl多重的；多样的】
文本组件：文本域JTextField，口令输入域JPasswordField，文本区JTextArea 有一个共同的父类JTextComponent
	方法：getSelectedText()被选中文本
		getText()提取文件组件中所有内容
		void select(int selectionStart,int selectEnd)选择起始到结束之间文本内容
	文本域：setFont(Font f)设置当前字体,getColumns()返回文本域的列数。new fTextField("我",30)创建名(名就是初始字符串)为我，30列的.
	文本区：append(String str)将指定文本追加到文本区。
	设置选中文本颜色为红色：setSelectedTextColor(Color.red)设置选中文本的颜色为红色

菜单有拉式菜单和弹出式菜单：菜单栏只有一种构造方法，即JMenuBar(),把菜单栏放到窗口的上方的方法是setJMenubar		【menu|menju菜单】
	菜单：Jmenu(String s，boolean b)指定标签，和该菜单是否可以分离.
	菜单项：JMenuItem(string text，Icon icon)显示文本和图标的菜单项， 
			JMenuItem(String text,int mnemonic)显示文本和快捷键，mnemonic可以是KeyEvent.VK_S(快捷键ctrl+s)		【mne mo nic|nɪˈmɒnɪk记忆的；助记的】
	JCheckBoxMenuItem复选框，JRadioButtonMenuItem单选按钮菜单项.
对话框依赖于其他窗口，对话框分为强制型和非强制型两种，强制型被关闭前，其他窗口无法接收输入称为模式窗口JDialog
		比如：new JDialog(frame,"Dialog",true),setVisible(true)显示，默认是不显示的
	显示标准对话框：JOptionPane类，方法showConfirmDialog确认对话框.
					showInputDialog输入对话框
					showOptionDialog选项对话框
					showMessageDialog信息对话框

线程死亡的两个原因：run()方法中最后一个语句执行完毕，线程遇到异常退出时便进入了死亡状态。
		阻塞：一个正在执行的线程因特殊原因，被暂停执行，进入阻塞状态。阻塞线程不能进入就绪队列，必须引起阻塞的原因消除
中断线程：interrupt()来终止线程，而且也能中断处于blocked状态线程，但是此时会抛出一个interruptedException异常		【inter rupt|ɪntəˈrʌpt打断，妨碍】
	isInterrupted()检测线程是否被中断。
	获取当前线程的优先级getPriority()			【Pri o rity|praɪˈɒrəti 优先；优先权】
可以用对象互斥锁阻止多个线程同时访问同一个条件变量：1. 用volatile声明一个变量，2. synchronized声明方法和代码断				【vo la tile|vɒlətaɪl不稳定的】
线程的同步：注意点在调用一个对象的wait(),notify()时他的方法必须用synchronized来修饰
线程优先级最低的是1，子线程自动获得父线程的优先级，线程体的方法称为run()方法中最后一个语句执行完毕，线程遇到异常退出时便进入了死亡状态。
sleep和yield能够暂时停止当前线程运行的一个方法。
而join()和wait()方法会让线程等待。