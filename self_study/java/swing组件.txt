JLabel 即可有文本又可有图标。
MouseMotionListener鼠标事件是鼠标移动
JFrame 和 JButton组件定义在 javax.swing
布局管理器负责组件显示方式
使按钮对象不响应事件，使用的方法是removeActionListener(ActionListener i)

在gra phi cs类中，绘图模式有 正常模式和 异或模式 
gra phi cal(ˈɡræfɪkl图形化的) AWT在java的java.awt包中  。Swing在javax.swing中
Swing不包含本地代码称为“轻量级”组件。AWT包含本地代码称为"重量级"组件  如果区域重叠AWT显示在上
组件有：JButton(按钮)，JTextField(单行文本输入框)，标签(JLabel)    容器有（特殊组件）：框架（Frame），面板（Pane）
JTextArea(行，列)是多行的输入框
【com po nent|kəmˈpəʊnənt组件，元件,构成的;per for med执行】
顶层容器：
	JFrame(带标题和控制按钮的独立窗口)
		JFrame(string title)初始不可见，有标题。 setVisble(true)设置可见
		void setBounds(int x,int y,int width,int height)左上角横纵x,y
		void pack()调整框架大小，适合子组件的首选大小和布局 Container getContentPane()返回框架窗体内容窗格对象	【pack包】
		setLayout(LayoutManager manager)设置布局管理器  setBackground(Color)设置背景
```
JFrame frame = new JFrame("带标题")//最外层的顶层容器（组件必须在容器中，容器可以嵌套）
frame.getContentPane().add(button,BorderLayout.CENTER)//添加组件的时候设置边界布局#必须获得内容窗格getContentPane#  2参不写默认是中
frame.pack()//调整适当大小
frame.setVisble(显示可见)
frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE)
```
获得内容窗格的方式有1. Container c = frame.getContentPane();然后在内容窗格内添加组件（这是默认的内容窗格而且默认BorderLayout）
JPanel contentPane = new JPanel();//创建实例
contentPane.setLayout(new BorderLayout());//他默认是flowLayout,所以要设置 BorderLayout.CENTER可以用"south"
contentPane.add(button，BorderLayout.CENTER）添加组件            内容窗格添加东西的时候，可以设置位置
frame.setContentPane(contentPane)//向顶层容器添加内容窗格
	JApplet(小应用程序，在浏览器窗口中)
	JDialog(对话框)
	JWindow（不带标题和控制按钮的窗口）

jscrollpane滚动窗口： JScrollpane(Component view)创建显示指定组件内容的JScrollPane 需要方法设置水平还是垂直【Component|kəmˈpəʊnən成分；组件】
new JPanel(LayoutManager layout).add(Component comp)指定布局管理器的新面板，并添加指定组件。
Scrollbar()构造垂直滚动条，或者添加int orientation值是Scrollbar.HORIZONTAL 或者 Scrollbar.VERTICAL。
因为JScrollPane是Container的子类,但是只能添加一个组件。所以多个组件的时候一般先添加到JPanel再添加到JScrollPane

标签JLable显示文本信息和图片信息（可同时）：JLabel(String text,Icon icon,int horizontalAlignment)文本和图片水平对齐同时显示
		图标的标签JLabel(Icon image,int horizontalAlignment)horizontalAlignment可以换成JLabel.RIGHT,JLabel.CENTER,JLabel.LEFT左对齐，image可以换成文本
		（默认情况下，只有文本水平左对齐，只有图标水平居中，标签内容垂直居中）
		设置对齐方式：label.setHorizontalAlignment(JLabel.CENTER)水平居中,label.setVerticalAlignment(JLabel.BOTTOM)底部对齐
		【Alignment|əˈlaɪnmənt队列，成直线对齐，Vertical|ˈvɜːrtɪkl垂直的】

按钮：AbstractButton的子类或间接子类有4种形式：JButton(Icon icon)有图标的按钮可以替换为文字,
JToggleButton（切换）(父类),JCheckBox（复选）（子类）,JRadioButton（单选）（子类）
		JButton b=new JButton("文字"，new ImageIcon("图片"));
		JButton(String text)：创建一个有标签文本、无图标的按钮
JButton类的方法：void setMnemonic(int mnemonic)设置当前按钮的键盘助记符
		setText(设置按钮的文本)。getText()返回按钮的文本。
		setToolTipText（string text）设置要显示的提示文本
		addActionListener(ActionListener i)添加侦听事件
		setEnabled()方法改变按钮状态
		new JToggleButton（string text.icon icon,boolean selected）显示文本加图标和舒适化状态的切换按钮，默认未选中

getSource()方法是指从哪个组件发出的事件源
