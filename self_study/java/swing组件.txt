JLabel 即可有文本又可有图标。
MouseMotionListener鼠标事件是鼠标移动
不包含本地代码的Swing组件是轻量级组件
包含本地代码的AWT组件叫重量级组件
JFrame 和 JButton组件定义在 javax.swing
布局管理器负责组件显示方式
使按钮对象不相应事件，使用的方法是removeActionListener(ActionListener i)

在graphics类中，绘图模式有 正常模式和 异或模式 


gra phi cal(ˈɡræfɪkl图形化的) AWT在java的java.awt包中  。Swing在javax.swing中
Swing不包含本地代码称为“轻量级”组件。AWT包含本地代码称为"重量级"组件  如果区域重叠AWT显示在上
组件有：JButton(按钮)，JTextField(单行文本输入框)，标签(JLabel)     容器有（特殊组件）：框架（Frame），面板（Pane）
顶层容器：
	JFrame(带标题和控制按钮的独立窗口)
		JFrame(string title)初始不可见，有标题 。 setVisble(true)设置可见
		void setBounds(int x,int y,int width,int height)左上角横纵x,y
		void pack()调整框架大小，适合子组件的首选大小和布局 Container getContentPane()返回框架窗体内容窗格对象	【pack包】
		setLayout(LayoutManager manager)设置布局管理器  setBackground(Color)设置背景
```
JFrame frame = new JFrame("带标题")//最外层的顶层容器（组件必须在容器中，容器可以嵌套）
frame.getContentPane().add(button,BorderLayout.CENTER)//添加组件的时候设置边界布局#必须获得内容窗格getContentPane#  2参不写默认是中
frame.pack()//调整适当大小
frame.setVisble(显示可见)
frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE)
```
获得内容窗格的方式有1. Container c = frame.getContentPane();然后在内容窗格内添加组件（这是默认的内容窗格而且默认BorderLayout）
JPanel contentPane = new JPanel();//创建实例
contentPane.setLayout(new BorderLayout());//他默认是flowLayout,所以要设置 BorderLayout.CENTER可以用"south"
contentPane.add(button，BorderLayout.CENTER）添加组件
frame.setContentPane(contentPane)//向顶层容器添加内容窗格


	JApplet(小应用程序，在浏览器窗口中)
	JDialog(对话框)
	JWindow（不带标题和控制按钮的窗口）


jscrollpane滚动窗口： JScrollpane(Component view)创建显示指定组件内容的JScrollPane 需要方法设置水平还是垂直
Scrollbar()构造垂直滚动条，或者添加int orientation值是Scrollbar.HORIZONTAL 或者 Scrollbar.VERTICAL

标签JLable显示文本信息和图片信息（可同时）：JLabel(String text,Icon icon,int horizontalAlignment)文本和图片水平对齐同时显示
		图标标签JLabel(Icon image,int horizontalAlignment)horizontalAlignment可以换成JLabel.RIGHT,JLabel.CENTER,JLabel.LEFT左对齐

按钮：AbstractButton的子类或间接子类有4种形式：JButton(Icon icon)有图标的按钮可以替换为文字,JToggleButton（切换）,JCheckBox（复选）,JRadioButton（单选）
		JButton b=new JButton("文字"，new ImageIcon("图片"));
JButton类的方法：void setMnemonic(int mnemonic)设置当前按钮的键盘助记符
